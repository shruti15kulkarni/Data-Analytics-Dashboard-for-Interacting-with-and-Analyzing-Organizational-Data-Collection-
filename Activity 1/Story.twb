<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/vijaykulkarni/Desktop/Spring 2017/DIC/Term Project/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.14' measure-ordering='alphabetic' measure-percentage='0.86' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/vijaykulkarni/Desktop/Spring 2017/DIC/Term Project/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.139381' measure-ordering='alphabetic' measure-percentage='0.860619' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='World GDP' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Map with Population' captured-sheet='Population' id='1' />
                  <story-point caption='GDP' captured-sheet='WorldGDPDashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Latitude (generated)]' field-type='quantitative' max='30275954.980133489' min='-40132085.384584509' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Longitude (generated)]' field-type='quantitative' max='21915206.759758394' min='-23362919.826986361' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Population Age' captured-sheet='PopulationAge' id='3' />
                  <story-point caption='GDP Year' captured-sheet='GDPYear' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4561' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561' />
            <zone h='83728' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='World GDP'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
      ZFPnXv4/BZ99D0Svq1cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='World GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
      Z2g536mcX72QLZDBCAAAZpLA0/d24+GdTZkcPu/Ultlw5NGtS6qxxGIi1SRS4n697eplkImC
      rSWIiXa9XhRIPla+Xqaz1XoRo4wNZ4IgcHh/B565by1K8tjGZ2eLB68+vh3N1YU7WVcIyAKo
      NSOspwDqxenqVAo9IdaK/OhdRy+yI+/TU1I9nyDlPEAq7lpXh1cf344Nyxf26WunTDi8vx0v
      HOxJKjplkFvSCX2qiE2ij6BnyqiP0QtfqrerRxOtCFDifWl9DkmSlBlq5RrS9FnZtswRJQlH
      PhjE917vw1gOF7Jrsa+rBt880Im6LGv0G8STaYukYDB1mUy9J66WkOtFZPTeM5v3zvT6WiON
      cq3ZKoBMhOXxi/f78cLJq7jpT11UKhtIAtjbWYPHbl+5pBbq5JOF6BFWaMxZAWQEUcKJiyP4
      9Uc3cfzCKPyzaLFKAFhVV4b9XTW4a11d0efj5xpDAZLJmQKoEUQJn9zw48Prk+gbDuDaeAS3
      AjT8UQ4sL4IkCDgsJlQ4LVjmLkGL14nVdWXY1FgBT5oevwazx1CAZHJUDSseE0lgbb1bWZhu
      YLBYMfIHDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoa
      QwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyK
      GkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIqa/wcW
      QysINOzKTQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
